{"version":3,"sources":["components/contactForm/ContactForm.jsx","components/filter/Filter.jsx","components/button/Button.jsx","components/contactList/ContactList.jsx","components/title/Title.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","onSubmit","preventDefault","props","propOnSubmit","reset","this","type","onChange","pattern","title","required","Component","Filter","htmlFor","Button","text","onClick","ContactList","filtred","onButtonDeleteClick","map","id","Title","App","contacts","filter","formSubmitHendler","data","find","n","alert","prevState","shortid","generate","obj","onChangeFilter","filteredContacts","contact","toLowerCase","includes","list","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TA+DeA,E,4MApDXC,MAAQ,CACNC,KAAM,GACNC,OAAO,I,EAEXC,aAAe,SAACC,GACd,EAAKC,SAAL,eACCD,EAAEE,cAAcL,KAAOG,EAAEE,cAAcC,S,EAK3CC,SAAW,SAACJ,GACTA,EAAEK,iBACF,EAAKC,MAAMC,aAAa,EAAKX,OAC7B,EAAKY,S,EAGLA,MAAQ,WACN,EAAKP,SAAU,CACfJ,KAAM,GACNC,OAAO,M,4CAIT,WACI,MAAqBW,KAAKb,MAApBC,EAAN,EAAMA,KAAMC,EAAZ,EAAYA,OACX,OAAQ,uBAAMM,SAAUK,KAAKL,SAArB,UACT,0CACJ,uBACEM,KAAK,OACLb,KAAK,OACLc,SAAUF,KAAKV,aACfI,MAAON,EACPe,QAAQ,yHACRC,MAAM,OACNC,UAAQ,OAED,4CACT,uBACEJ,KAAK,OACLb,KAAK,SACLc,SAAUF,KAAKV,aACfI,MAAOL,EACPc,QAAQ,yFACRC,MAAM,OACNC,UAAQ,OAGN,wBAAQJ,KAAK,SAAb,gC,GAvDkBK,aCYXC,EAdA,SAAC,GAAqB,IAApBL,EAAmB,EAAnBA,SAAUR,EAAS,EAATA,MAEvB,OACI,wBAAOc,QAAQ,GAAf,mCACI,uBAAOP,KAAK,OAAOP,MAAOA,EAAOQ,SAAUA,QCKxCO,EAVA,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACpB,OACI,wBAAQV,KAAK,SAASU,QAASA,EAA/B,SAAyCD,KCgClCE,EAhCK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,oBAC5B,OAEI,6BACGD,EAAQE,KAAI,YAA2B,IAAxB3B,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQ2B,EAAS,EAATA,GAC5B,OACE,+BACE,8BAAI5B,EAAJ,OACA,4BAAIC,IACJ,cAAC,EAAD,CACEqB,KAAK,SACLC,QAAS,WACPG,EAAoBE,QANjBA,SCERC,EAVD,SAAC,GAAc,IAAZP,EAAW,EAAXA,KACb,OACI,6BAAKA,KC0DEQ,E,4MA7Cb/B,MAAQ,CACNgC,SAAU,CACR,CAAEH,GAAI,OAAQ5B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE2B,GAAI,OAAQ5B,KAAM,iBAAkBC,OAAQ,aAC9C,CAAE2B,GAAI,OAAQ5B,KAAM,gBAAiBC,OAAQ,aAC7C,CAAE2B,GAAI,OAAQ5B,KAAM,iBAAkBC,OAAQ,cAEhD+B,OAAQ,I,EAGVC,kBAAoB,SAAAC,GAClB,EAAKnC,MAAMgC,SAASI,MAAK,SAAAC,GAAC,OAAIA,EAAEpC,OAASkC,EAAKlC,QAC1CqC,MAAM,GAAD,OAAIH,EAAKlC,KAAT,oBACL,EAAKI,UAAS,SAAAkC,GAAS,MAAK,CAC1BP,SAAS,CAAD,aAAKH,GAAIW,IAAQC,YAAeN,IAAhC,mBAA2CI,EAAUP,gB,EAIrEL,oBAAsB,SAAAE,GACpB,EAAKxB,SAAS,CACZ2B,SAAU,EAAKhC,MAAMgC,SAASC,QAAO,SAAAS,GAAG,OAAIA,EAAIb,KAAOA,Q,EAG3Dc,eAAiB,SAAAvC,GACf,EAAKC,SAAS,CACZ4B,OAAQ7B,EAAEE,cAAcC,S,4CAI5B,WAAU,IAAD,OACDqC,EAAmB/B,KAAKb,MAAMgC,SAASC,QAAO,SAAAY,GAAO,OACzDA,EAAQ5C,KAAK6C,cAAcC,SAAS,EAAK/C,MAAMiC,OAAOa,kBAExD,OACE,gCACE,cAAC,EAAD,CAAOvB,KAAK,eACZ,cAAC,EAAD,CAAaZ,aAAcE,KAAKqB,kBAAmBc,KAAMnC,KAAKb,MAAMgC,WACpE,cAAC,EAAD,CAAOT,KAAK,aACZ,cAAC,EAAD,CAAQhB,MAAOM,KAAKb,MAAMiC,OAAQlB,SAAUF,KAAK8B,iBACjD,cAAC,EAAD,CAAajB,QAASkB,EAAkBjB,oBAAqBd,KAAKc,6B,GA7CxDR,aCEH8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.50050abe.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Component } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nclass ContactForm extends Component{\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n  };\r\n\r\n\r\n    state = {\r\n      name: '',\r\n      number:''\r\n    }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n    [e.currentTarget.name]: e.currentTarget.value\r\n    })\r\n  }\r\n \r\n\r\n onSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.propOnSubmit(this.state)\r\n    this.reset()\r\n  }\r\n  \r\n    reset = () => {\r\n      this.setState( {\r\n      name: '',\r\n      number:''\r\n    }) \r\n    }\r\n\r\n    render() {\r\n        const{name, number}= this.state\r\n         return (<form onSubmit={this.onSubmit}>\r\n        <label> Name\r\n    <input\r\n      type=\"text\"\r\n      name=\"name\"\r\n      onChange={this.handleChange}\r\n      value={name}\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Name\"\r\n      required\r\n          /></label>\r\n             <label> Number\r\n    <input\r\n      type=\"text\"\r\n      name=\"number\"\r\n      onChange={this.handleChange}\r\n      value={number}\r\n      pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n      title=\"Name\"\r\n      required\r\n        /></label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>)\r\n    }\r\n}\r\nexport default ContactForm","import PropTypes from 'prop-types'\r\n\r\nconst Filter = ({onChange, value})=>{\r\n\r\n    return(  \r\n        <label htmlFor=\"\"> Find contacts by name\r\n            <input type=\"text\" value={value} onChange={onChange}/>\r\n    </label>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string,\r\n}\r\n\r\nexport default Filter","import PropTypes from 'prop-types'\r\nconst Button = ({ text, onClick }) => {\r\n    return (\r\n        <button type=\"button\" onClick={onClick}>{text}</button>\r\n    )\r\n}\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button","import Button from \"../button/Button\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ContactList = ({ filtred, onButtonDeleteClick }) => {\r\n    return (\r\n        \r\n        <ul>\r\n          {filtred.map(({ name, number, id }) => {\r\n            return (\r\n              <li key={id}>\r\n                <p>{name}:</p>\r\n                <p>{number}</p>\r\n                <Button\r\n                  text=\"Delete\"\r\n                  onClick={() => {\r\n                    onButtonDeleteClick(id);\r\n                  }}\r\n                />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n  filtred: PropTypes.arrayOf(PropTypes.shape({\r\n    name: PropTypes.string,\r\n    id: PropTypes.string,\r\n    number: PropTypes.string,\r\n  })),\r\n  onButtonDeleteClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default ContactList","import PropTypes from 'prop-types'\r\nconst Title = ({ text }) => {\r\n    return (\r\n        <h2>{text}</h2>\r\n    )\r\n}\r\n\r\nTitle.propTypes = {\r\n    text: PropTypes.string,\r\n}\r\n\r\nexport default Title","import React from 'react';\nimport { Component } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport ContactForm from './components/contactForm/ContactForm';\nimport Filter from './components/filter/Filter';\nimport ContactList from './components/contactList/ContactList';\nimport Title from './components/title/Title';\n\nclass App extends Component {\n  static propTypes = {\n    contacts: PropTypes.array,\n    filter: PropTypes.string,\n  };\n\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  formSubmitHendler = data => {\n    this.state.contacts.find(n => n.name === data.name)\n      ? alert(`${data.name} already exists`)\n      : this.setState(prevState => ({\n          contacts: [{ id: shortid.generate(), ...data }, ...prevState.contacts],\n        }));\n  };\n\n  onButtonDeleteClick = id => {\n    this.setState({\n      contacts: this.state.contacts.filter(obj => obj.id !== id),\n    });\n  };\n  onChangeFilter = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  render() {\n    const filteredContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n    );\n    return (\n      <div>\n        <Title text=\"Phoneboock\" />\n        <ContactForm propOnSubmit={this.formSubmitHendler} list={this.state.contacts} />\n        <Title text=\"Contacts\" />\n        <Filter value={this.state.filter} onChange={this.onChangeFilter} />\n        <ContactList filtred={filteredContacts} onButtonDeleteClick={this.onButtonDeleteClick} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}